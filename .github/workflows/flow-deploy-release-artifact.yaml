name: "Deploy Release Artifact"
on:
  workflow_dispatch:
    inputs:
      go-version:
        description: "Go Version:"
        type: string
        required: false
        default: "1.24.3"
      dry-run-enabled:
        description: "Perform Dry Run"
        type: boolean
        required: false
        default: false

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  create-github-release:
    name: Github / Release
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Retrieve Commit Hash
        id: commit
        run: |
          echo "sha=$(git rev-parse HEAD)" >> "${GITHUB_OUTPUT}"
          echo "sha-abbrev=$(git rev-parse HEAD | tr -d '[:space:]' | cut -c1-8)" >> "${GITHUB_OUTPUT}"
          echo "source-date=$(git log -1 --pretty=%ct)" >> "${GITHUB_OUTPUT}"
          echo "oci-date=$(date -u -d @$(git log -1 --pretty=%ct) +'%Y%m%d')" >> "${GITHUB_OUTPUT}"

      - name: Setup GoLang
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.39.2
          repo-token: ${{ github.token }}

      - name: Setup Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 20

      - name: Install Semantic Release
        run: npm install -g semantic-release@24.2.4 @semantic-release/exec@7.1.0 conventional-changelog-conventionalcommits@8.0.0

      - name: Publish Semantic Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          FLAGS=""
          if [[ "${{ inputs.dry-run-enabled }}" == "true" ]]; then
            FLAGS="--dry-run"
          fi
          
          npx semantic-release ${FLAGS}

      - name: Retrieve Container Version
        id: version
        run: echo "number=$(cat internal/version/VERSION | tr -d '[:space:]')" >> "${GITHUB_OUTPUT}"
